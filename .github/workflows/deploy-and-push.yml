name: 2. Build and Push Image
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - prod
        default: 'dev'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        env:
          NODE_ENV: production
          NEXT_PUBLIC_ENV: ${{ github.event.inputs.environment }}
          NEXT_TELEMETRY_DISABLED: 1
        run: |
          rm -rf .next
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_URI }}
        run: |
          docker build \
            --build-arg NODE_ENV=production \
            --build-arg NEXT_PUBLIC_ENV=${{ github.event.inputs.environment }} \
            -t $ECR_REPOSITORY:latest \
            -t $ECR_REPOSITORY:${{ github.sha }} .
          docker push $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY:${{ github.sha }}