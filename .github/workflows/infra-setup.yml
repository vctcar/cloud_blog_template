name: 1. Setup Infrastructure
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev/prod)'
        required: true
        default: 'dev'

jobs:
  setup-base-infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy Base Infrastructure
        id: cloudformation
        run: |
          # Deploy ECR and IAM resources first
          aws cloudformation deploy \
            --template-file infrastructure/cloudformation/ecr-setup.yml \
            --stack-name ${{ github.event.inputs.environment }}-ecr-stack \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides Environment=${{ github.event.inputs.environment }}
            
      - name: Get ECR Repository URI
        id: ecr
        run: |
          ECR_URI=$(aws cloudformation describe-stacks \
            --stack-name ${{ github.event.inputs.environment }}-ecr-stack \
            --query 'Stacks[0].Outputs[?OutputKey==`ECRRepositoryURI`].OutputValue' \
            --output text)
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
          echo "repository_uri=$ECR_URI" >> $GITHUB_OUTPUT
          
      - name: Set repository secrets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh secret set "ECR_REPOSITORY_URI" -b "${{ steps.ecr.outputs.repository_uri }}" --env ${{ github.event.inputs.environment }}