name: Setup Infrastructure
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev/prod)'
        required: true
        default: 'dev'

jobs:
  setup:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        env:
          NODE_ENV: ${{ github.event.inputs.environment == 'prod' && 'production' || 'development' }}
        run: npm run build

      - name: Deploy CloudFormation Stack
        id: cloudformation
        run: |
          aws cloudformation deploy \
            --template-file infrastructure/cloudformation/deploy-app-runner.yml \
            --stack-name ${{ github.event.inputs.environment }}-nextjs-stack \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides Environment=${{ github.event.inputs.environment }}

      - name: Get ECR Repository URI
        id: ecr
        run: |
          ECR_URI=$(aws cloudformation describe-stacks \
            --stack-name ${{ github.event.inputs.environment }}-nextjs-stack \
            --query 'Stacks[0].Outputs[?OutputKey==`ECRRepositoryURI`].OutputValue' \
            --output text)
          echo "repository_uri=$ECR_URI" >> $GITHUB_OUTPUT

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.ecr.outputs.repository_uri }}
        run: |
          docker build \
            --build-arg NODE_ENV=${{ github.event.inputs.environment == 'prod' && 'production' || 'development' }} \
            -t $ECR_REPOSITORY:latest \
            -t $ECR_REPOSITORY:${{ github.sha }} .
          docker push $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY:${{ github.sha }}